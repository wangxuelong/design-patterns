OO原则：
	为交互对象之间的松耦合设计而努力

OO模式：
	观察者模式
	在对象之间定义一对多的依赖，这样一来，当一个对象改变状态，依赖它的对象都会收到通知，并自动更新。

要点：
1、观察者模式定义了对象之间一对多的关系。
2、主题（也就是可观察者）用一个共同的接口来更新观察者。
3、观察者和可观察者之间用松耦合方式结果（loosecoupling），可观察者不知道观察者的细节，只知道观察者实现了观察者的接口。
4、使用此模式时，你可以从被观察者处推（push）或拉（pull）数据（然而，推的方式被认为更“正确”）。
5、有多个观察者时，不可以依赖特定的通知次序。
6、Java有多种观察者模式的实现，包括了通用的java.util.Observable。
7、如果有必要的话，可以实现自己的Observable，这并不难，不要害怕。
8、Swing大量使用观察者模式，许多GUI框架也是如此。
9、此模式也被应用在许多地方，例如：JavaBeans、RMI。

备注：
观察者有push 和 poll
weather 为  推（push）
weather2 为 拉（poll）
推（push）的方式被认为更正确。
